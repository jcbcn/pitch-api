variables:
    registryEndpoint: pitch-registry
    dockerRegistry: pitchgame/
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - src/user/*
    - k8s/helm/user/*
    - build/user/*
jobs:
- job: BuildLinux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      cd src/user
      docker build --pull --target testrunner -t pitch.user.api:testrunner .
      docker run --name userapitest pitch.user.api:testrunner
      docker cp userapitest:/src/Pitch.User.API.Tests/TestResults $(System.DefaultWorkingDirectory)
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
      failTaskOnFailedTests: true
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish coverage reports'
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/TestResults/coverage.cobertura.xml'
  - task: Docker@2
    displayName: Build and Push
    inputs:
      command: buildAndPush
      containerRegistry: pitch-registry
      Dockerfile: src/user/Dockerfile
      repository: pitchgame/user.api
  - task: HelmDeploy@0
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: 'Pay-As-You-Go(c1640d06-3596-4f30-a322-42d2ef2d3992)'
      azureResourceGroup: 'pitch-resource-group'
      kubernetesCluster: 'pitch-aks'
      command: 'init'
      arguments: '--client-only'
  - task: HelmDeploy@0
    inputs:
      azureSubscription: 'Pay-As-You-Go(c1640d06-3596-4f30-a322-42d2ef2d3992)'
      azureResourceGroup: 'pitch-resource-group'
      kubernetesCluster: 'pitch-aks'
      command: 'package'
      chartPath: './k8s/helm/user'
      updateDependency: true
      overrideValues: image.tag=$(Build.BuildId)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'helm'
      publishLocation: 'Container'